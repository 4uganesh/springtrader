apiVersion: apps/v1
kind: Deployment
metadata:
<<<<<<< HEAD
    name: springtrader-app
    labels:
      app: springtrader-app
      version: {{ .Values.version }}
spec:
 strategy:
  type: Recreate
 selector:
   matchLabels:
     app: springtrader-app
 template:
   metadata:
     labels:
         app: springtrader-app
         version: {{ .Values.version }}
   spec:
     hostAliases:
       - ip: "127.0.0.1"
         hostnames:
         - "centos6"
         - "nanodbserver"
     initContainers:
     - name: sqlf-setup
       image: alpine
       command: ["/bin/sh","-c"]
       args: ["mkdir -p /sqlf-data/locator1 /sqlf-data/server1"]
       volumeMounts:
       - mountPath: /sqlf-data
         name: server-data

     containers:
     - name: sqlflocator
       image: {{ .Values.sqlfdb }}
       command: ["/bin/sh","-c"]
       args: ["sqlf locator start \
       -peer-discovery-address=127.0.0.1 \
       -peer-discovery-port=3241 \
       -dir=/sqlf-data/locator1 \
       -client-port=1527 \
       -client-bind-address=0.0.0.0 \
       -bind-address=127.0.0.1 \
       && tail -f /sqlf-data/locator1/sqlflocator.log"]
       strategy: 
         type: recreate
       volumeMounts:
       - mountPath: /sqlf-data
         name: server-data
       readinessProbe:
         exec:
           command:
           - /bin/sh
           - -c
           - grep "started and ready to accept connections" /sqlf-data/locator1/sqlflocator.log 
         initialDelaySeconds: 5
         periodSeconds: 15
     - name: sqlfserver
       image: {{ .Values.sqlfdb }}
       command: ["/bin/sh","-c"]
       args: ["sqlf server start \
       -dir=/sqlf-data/server1 \
       -client-bind-address=0.0.0.0 \
       -client-port=1528 \
       -locators=127.0.0.1[3241] \
       -bind-address=127.0.0.1 \
       && tail -f /sqlf-data/server1/sqlfserver.log"]
       volumeMounts:
         - mountPath: /sqlf-data
           name: server-data
     - name: springtrader
       image: {{ .Values.image }}
       env:
       - name: GROOVY_HOME
         value: '/usr/bin'
     - name: rabbitmq
       image: rabbitmq
     volumes:
       - name: server-data
         persistentVolumeClaim:
           claimName: pvc-sqlf-server
=======
  name: springtrader
  labels:
    app: springtrader
    version: {{ .Values.version }}
spec:
  selector:
    matchLabels:
      app: springtrader
  template:
    metadata:
      labels:
        app: springtrader
        version: {{ .Values.version }}
    spec:
      initContainers:
      - name: wait-for-schema
        image: bitnami/kubectl:1.15
        args: ['wait','--for=condition=complete','job/generate-schema','--timeout=300s']
      containers:
      - name: springtrader
        image: {{ .Values.image }}
        env:
        - name: GROOVY_HOME
          value: '/usr/bin'
        livenessProbe:
          httpGet:
            path: /spring-nanotrader-web/
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /spring-nanotrader-web/
            port: 8080
          initialDelaySeconds: 30
          timeoutSeconds: 5
      - name: rabbitmq
        image: rabbitmq
>>>>>>> c54e117a9cfe155fe12497f758b7a46f80d915ee
